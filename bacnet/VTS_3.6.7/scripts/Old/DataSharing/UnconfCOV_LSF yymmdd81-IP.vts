  ;-------------------------------------------------------------------------------------
  ;  Unconfirmed Change of Value (COV) Notification Service Initiation Tests
  ;	COV Notification from a Loop Object Status Flags Property
  ;
  ;  UnconfirmedCOV_LSF.vts	UnCOVddmmyy-08.vts
  ;
  ;  Ver 1.0   05/27/01    P. Bowen	Initial version
  ;
  ;  Purpose: This test case verifies that the IUT can initiate an
  ;	UnconfirmedCOVNotification service requests conveying a change of the 
  ;	Status_Flags property of a Loop object.
  ;  
  ;  Note: the following tests should be executed before running this test:
  ;	ReadProperty Service Execution Tests
  ;	WriteProperty Service Execution Tests
  ;
  ;  In the REFERENCE section "(B)" refers to the BACnet standard and
  ;  "(T)" refers to the testing addendum.
  ;-------------------------------------------------------------------------------------
  
  SETUP Unconfirmed COV Notification Test - Loop Object Status Flags Property

  ;-------------------------------------------------------------------------------------
  ;
  ; TD_CONFIG
  ;
  TD_IP = 10.10.10.36

  OBJECT1 = Loop, 1		; Object which is the subject of the status flag tests
  
  PID = 21			; Subscriber Process Identifier
  LIFETIME = 0			; Subscription lifetime in secs (0 = indefinite)
  WRITE_PRIORITY = 1		; Priority for writing changes

  ;-------------------------------------------------------------------------------------
  ;
  ; IUT_CONFIG
  ;
  
  IUT_IP = 10.10.10.100
  --IUT_IP = 208.6.162.35
	                            
  ;-------------------------------------------------------------------------------------
 
   SECTION Unconfirmed COV Notification Test - Loop Object Status Flags Property

  -- This test takes place across test steps #1a - #1c so the TD can be manually 
  -- paused between tests. This is necessary since the Unconfirmed COV 
  -- Notifications must be verified manually.

  -- Configuration Requirements: At the beginning of the test, the Out-Of-Service 
  -- property shall have a value of FALSE.

  -- Test Concept: A subscription for Unconfirmed COV notifications is 
  -- established. The Status_Flags property of the monitored object is then 
  -- changed and an Unconfirmed COV notification shall be received. The value
  -- of the Status-Flags property can be changed by using the WriteProperty
  -- service or by another means. For some implementations writing to the 
  -- Out_Of_Service property will accomplish this task. 
  
  -- For implementations where it is not possible to write to Status_Flags or
  -- Out_Of_Service, the vendor shall provide an alternative trigger mechanism
  -- to accomplish this task. All of these methods are equally acceptable.

  -- Note: The object identifier of the Loop object being tested is designated
  -- as L in the test steps below.

  -- Test Steps:	
  -- 1.	TRANSMIT SubscribeCOV-Request,
  --	'Subscriber Process Identifier' = (any value > 0 chosen by the TD),
  --	'Monitored Object Identifier' =	L,
  --	'Issue Confirmed Notifications' = FALSE,
  --	'Lifetime' = 0
  -- 2.	RECEIVE BACnet-SimpleACK-PDU
  -- 3.	RECEIVE ConfirmedCOVNotification-Request,
  --	'Subscriber Process Identifier' = (the same value used in step 1),
  --	'Initiating Device Identifier' = IUT,
  --	'Monitored Object Identifier' = L,
  --	'Time Remaining' = 0,
  --	'List of Values' = (the initial Present_Value, initial 
  --	 Status_Flags, initial Setpoint, and initial Controlled_Variable_Value)
  -- 4.	WRITE L, Out_Of_Service = TRUE | WRITE L, Status_Flags = (a value that 
  --	 differs from "initial Status_Flags") |
  --	MAKE (Status_Flags = any value that differs from "initial Status_Flags")
  -- 5.	IF (WriteProperty is used in step 4 THEN
  --		RECEIVE BACnet-SimpleACK-PDU
  -- 6.	BEFORE  NotificationFailTime
  --	 RECEIVE ConfirmedCOVNotification-Request,
  --		'Subscriber Process Identifier' = (the same value used in step 1),
  --		'Initiating Device Identifier' = IUT,
  --		'Monitored Object Identifier' =	L,
  --		'Time Remaining' = 0,
  --		'List of Values' = (the initial Present_Value, new Status_Flags,
  --		 initial Setpoint, and initial Controlled_Variable_Value) 
  -- 7.	TRANSMIT SubscribeCOV-Request,
  --		'Subscriber Process Identifier' = (the same value used in step 1),
  --		'Monitored Object Identifier' =	L
  -- 8. RECEIVE BACnet-SimpleACK-PDU
  -- 9. IF (Out_Of_Service was changed in step 4) THEN
  --		WRITE L, Out_Of_Service = FALSE
  --		RECEIVE BACnet-SimpleACK-PDU

  ;-------------------------------------------------------------------------------------
  TEST #1a Subscribe to COV and Receive Unconfirmed COV Notification

  DEPENDENCIES None

  REFERENCE (B) Unconfirmed COV Notification Service and (T) Unconfirmed COV Notification Test - AI/AO/AV SF Property

  -- Steps #1 & 2: Subscribe to Unconfirmed COV service and Receive Simple ACK

    SEND (
      NETWORK = "Untitled"
      Da = IUT_IP
      Der = TRUE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = Confirmed-Request
      SegMsg = 0
      SegResp = 0
      MaxResp = 1476
      InVokeID = 1
      Service = SubscribeCOV
      Unsigned = 0, PID			; Process-Identifier = PID
      Object = 1, OBJECT1		; Object-Identifier = OBJECT1
      Boolean = 2, FALSE		; Request Unconfirmed notifications
      Unsigned = 3, LIFETIME		; Subscribe for LIFETIME seconds
    )

    EXPECT (
      NETWORK = "Untitled"
      Sa = IUT_IP
      Der = FALSE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = SimpleAck
      Service = SubscribeCOV
    )

  --Step #3: Receive Unconfirmed COV Notification Request

  --  AND (				; Can't control the timing of the IUT's
  --    NETWORK = NET_1			; COV Notification Request so TD can't
  --    DER = FALSE			; use this EXPECT statement
  --    PDU = Confirmed-Request
  --    Service = UnconfirmedCOVNotification
  --  )

  ;-------------------------------------------------------------------------------------
  TEST #1b Make Out-of-Service = TRUE and Receive Unconfirmed COV Notification Request

  DEPENDENCIES None

  -- Steps #4 & 5: Make Out-of-Service = TRUE and Receive Simple ACK

   SEND (
      NETWORK = "Untitled"
      Da = IUT_IP
      Der = TRUE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = Confirmed-Request
      SegMsg = 0
      SegResp = 0
      MaxResp = 1476
      InVokeID = 1
      Service = WriteProperty
      Object = 0, OBJECT1
      Property = 1, Out-of-Service
      OpenTag 3
        BOOLEAN = TRUE			; Make Out-of-Service = TRUE
      CloseTag 3
      Unsigned = 4, WRITE_PRIORITY	; Set Out-of-Service write priority
    )

    EXPECT (
      NETWORK = "Untitled"
      Sa = IUT_IP
      Der = FALSE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = SimpleAck
      Service = WriteProperty
    )

  -- Step #6: Before NotificationFailTime Receive Unconfirmed COV Notification Request

  --  AND (				; Can't control the timing of the IUT's
  --    NETWORK = NET_1			; COV Notification Request so TD can't
  --    DER = FALSE			; use this EXPECT statement
  --    PDU = Confirmed-Request
  --    Service = UnconfirmedCOVNotification
  --  )

  ;-------------------------------------------------------------------------------------
  TEST #1c Send Unsubscribe COV Request and Make Out-of-Service = FALSE

  DEPENDENCIES None

  -- Steps #7 & 8: Send Unsubscribe COV Request message to IUT and Receive Simple ACK
  
    SEND (
      NETWORK = "Untitled"
      Da = IUT_IP
      Der = TRUE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = Confirmed-Request
      SegMsg = 0
      SegResp = 0
      MaxResp = 1476
      InVokeID = 1
      Service = SubscribeCOV		; Cancel COV Subscription request
      Unsigned = 0, PID			; Process-Identifier = PID
      Object = 1, OBJECT1		; Object-Identifier = OBJECT1
    )

    EXPECT (
      NETWORK = "Untitled"
      Sa = IUT_IP
      Der = FALSE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = SimpleAck
      Service = SubscribeCOV
    )

  -- Step #9: Make Out-of-Service = FALSE and Receive Simple ACK

   SEND (
      NETWORK = "Untitled"
      Da = IUT_IP
      Der = TRUE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = Confirmed-Request
      SegMsg = 0
      SegResp = 0
      MaxResp = 1476
      InVokeID = 1
      Service = WriteProperty
      Object = 0, OBJECT1
      Property = 1, Out-of-Service
      OpenTag 3
         BOOLEAN = FALSE		; Make Out-of-Service = FALSE
      CloseTag 3
      Unsigned = 4, WRITE_PRIORITY	; Set Out-of-Service write priority
    )

    EXPECT (
      NETWORK = "Untitled"
      Sa = IUT_IP
      Der = FALSE
      BVLCI = ORIGINAL-UNICAST-NPDU      
      PDU = SimpleAck
      Service = WriteProperty
    )
  ;-------------------------------------------------------------------------------------
  ;  ReadProperty Service Execution Tests
  ;    Draft
  ;  RPmmddyy.vts
  ;
  ;	Ver 1.0		02/03/01	P. Bowen	Initial Version
  ;	Ver 1.1		02/24/01	P. Bowen	Update comments in Test #1e
  ;	Ver 1.2		03/25/01	P. Bowen	Update script with new format
  ;	Ver 1.3         07/31/01	Bradsp		Verified tests 1e, 1f, 1g, 1h
  ;	Ver 1.4		08/12/01	P. Bowen	Add tests 1i through 1s
  ;     Ver 1.5         09/17/01        Bradsp          Marked with easy change symbols and Routing sections  
  ;  Purpose: This script defines the tests necessary to demonstrate support for
  ;	initiating Positive Read Property Service requests. The purpose of
  ;	this test group is to verify correct execution of ReadProperty service 
  ;	requests under circumstances where the service is expected to be successfully
  ;	completed. 
  ;
  ;  In the REFERENCE section "(B)" refers to the BACnet standard and "(T)" refers 
  ;	to the testing addendum.
  ;-------------------------------------------------------------------------------------
  
  SETUP Positive ReadProperty Tests

  ;------------------------------------------------------------------------------------- 
  ; Notes on Hardcoding and other changes needing to be made outside of the setup section including hard coded objects and properties 
  ; Items marked and found with *** are hardcoded or the error messages must be manually verified in the trace. 
  ;
  ;
  ;-------------------------------------------------------------------------------------
  ;
  ; TD_CONFIG  All objects and properties are listed here including notes on there use
  ;

  

  OBJECT1 = device,3050000        ; DEVICE OBJECT
  OBJECT2 = analog-value, 1	; Object which is the subject of the Read Prop tests
  PRIARRAYOBJ = Binary-output, 2
  OBJECT4 = File, 104		; Object which is the subject of the Read Prop tests test 1q

  INDEX0 = 0		; Index used in any test to read array length
  INDEX1 = 1		; Array index for test #1g "Read a Single Element of an Array"
  INDEX2 = 4		; Array index for test #1j "Read Property - Read Null Values"
  
  


  -- TEST #1a - Read Property of Type Object Identifier
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1b - Read Property of Type Enumerated
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1c - Read Property of Type CharacterString
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1d - Read Property of Type Unsigned
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1e - Read an Entire Array
              -- MANUAL SEND AND RECEIVE   MANAUL READ OF vts MAY NEED TO BE DONE
              -- BODY CHANGE  

  -- Test #1f - Read the Size of an Array 
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- TEST #1g - Read a Single Element of an Array
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- TEST #1h - Read Property of Type Bitstring
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1i - Read Property of Entire List
              -- MANUAL SEND AND RECEIVE    MANAUL READ OF vts MAY NEED TO BE DONE
              -- BODY CHANGE  

  -- Test #1j - Read Property - Read Null Values ( EXPECT hc)
              -- MANUAL SEND AND RECEIVE  NONE 
              -- BODY CHANGE  NONE

  -- Test #1k - Read Property of Type Boolean
              -- MANUAL SEND AND RECEIVE   NONE
              -- BODY CHANGE  NONE

  -- Test #1l - Read Property of Type Signed - (commented - THIS IS UNSUPPORTED IN VTS)
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1m - Read Property of Type Real
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1n - Read Property of Type Double (commented)
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #10 - Read Property of Type Time 
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1p - Read Property of Type Date
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1q - Read Property of Type Octet String ( SEND hc)
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  YES, THE VALUES FOR INTEGER AND OCTETSTRING MUST BE MANUALLY HARDCODED INTO THE BODY OF THIS SCRIPT

  -- Test #1r - Read Proprietary Values (commented) THIS DOES NOT NEED TO BE DONE
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

  -- Test #1s - Read Constructed Values (commented) THIS TEST DOES NOT NEED TO BE DONE
              -- MANUAL SEND AND RECEIVE   
              -- BODY CHANGE  

 
  SECTION ReadProperty Service Execution Tests

  -- Reference (T) Positive ReadProperty Service Execution Tests

  -- Configuration Requirements: IUT is on the same network as TD.

  ;-------------------------------------------------------------------------------------
  TEST #1a - Read Property of Type Object Identifier

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type BACnetObjectIdentifier.

  -- Test Steps:
  --	1. VERIFY (Object, X), property value = (any value of type BACnetObjectIdentifier)
 
  -- Passing Result: The IUT shall respond as indicated conveying the value 
  -- specified in the EPICS.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading Object Identifiers

  SEND (
     
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      PDU = ComplexAck
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Object-Identifier
      OpenTag 3
      --   AL = {Object-Identifier}
      OBJECTIDENTIFIER = OBJECT1     ; {Object-Identifier}
      CloseTag 3
    )

  ;-------------------------------------------------------------------------------------
  Test #1b - Read Property of Type Enumerated
 
  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Enumerated.

  -- Test Steps:
  --	1. VERIFY (Object, X), property value = (any value of type Enumerated)

  -- Passing Result: The IUT shall respond as indicated conveying the value 
  -- specified in the EPICS.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading Enumerated Values

    SEND (
     
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Object-Type		
    )

    EXPECT (
      
      PDU = ComplexAck
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Object-Type
      OpenTag 3
     --  OBJECTIDENTIFIER = {Object-Type}
      AL = {Object-Type}
      CloseTag 3                                   
    )

  ;-------------------------------------------------------------------------------------
  Test #1c - Read Property of Type CharacterString

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type CharacterString. 

  -- Test Steps:
  --	1. VERIFY (Object, X), property value = (any value of type CharacterString)
 
  -- Passing Result: The IUT shall respond as indicated conveying the value
  -- specified in the EPICS.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading CharacterString Values


    SEND (
     
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Vendor-Name		
    )

    EXPECT (
      
      PDU = ComplexAck
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Vendor-Name
      OpenTag 3
        AL = {Vendor-Name}
      CloseTag 3                                   
    )

  ;-------------------------------------------------------------------------------------
  Test #1d - Read Property of Type Unsigned

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Unsigned.
 
  -- Test Steps:
  --	1. VERIFY (Object, X), property value = (any value of type Unsigned)
 
  -- Passing Result: The IUT shall respond as indicated conveying the value 
  -- specified in the EPICS.
 
  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading Unsigned Values

    SEND (
      
      DER = TRUE
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Vendor-Identifier		
    )

    EXPECT (
      
      PDU = ComplexAck
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, Vendor-Identifier	
      OpenTag 3
        AL = {Vendor-Identifier}
      CloseTag 3                                   
    )

  ;-------------------------------------------------------------------------------------
  Test #1e - Read an Entire Array

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Array and the entire array is 
  -- requested.

  -- Test Steps:
  --	1. VERIFY (Object, X), property value = (an entire array)

  -- Passing Result: The IUT shall respond as indicated conveying values specified
  -- in the EPICS. If segmentation is not supported and the object list is too long
  -- to return without segmentation an abort message indicating "segmentation not
  -- supported" is a passing result. If an abort message is received and the IUT
  -- has another array that is small enough to read in its entirety without 
  -- segmentation, then this test shall be repeated using that array. A passing 
  -- result in that case is that the entire array is returned in response to the 
  -- ReadProperty request.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading Entire Arrays

    SEND (
    
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array	; Read entire Object-List array
    )

    EXPECT (
     
      PDU = ComplexAck
      DER = FALSE
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array
      OpenTag 3
         AL = {Priority-Array}		; Note: due to a limitation in VTS V2.28
      CloseTag 3			;  this test will fail if proprietary
    )					;  objects are returned in the array

  ;-------------------------------------------------------------------------------------
  Test #1f - Read the Size of an Array

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Array and the length of the 
  -- array is read.

  -- Test Steps:
  --	1. VERIFY (Object, X, Array Index = 0), property value = (the array length)

  -- Passing Result: The IUT shall respond as indicated conveying the array length 
  -- as specified in the EPICS.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading the Size of an Array

    SEND (
     
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array
      Unsigned = 2, INDEX0			; Array[0] contains array length
    )

    EXPECT (
      NETWORK = NET_1
      PDU = ComplexAck
      DER = FALSE
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array
      Unsigned = 2, INDEX0
      OpenTag 3
       AL = {Priority-Array[0]}		; Caution must match epics including Proprietary $ new objects -- this could fail
      CloseTag 3			
     )

  ;------------------------------------------------------------------------------------- 
  TEST #1g - Read a Single Element of an Array

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Array and a single element of
  -- the array is read.

  -- Test Steps:
  --	1. VERIFY (Object, X, Array Index = Y), property value = (the value of the
  --	Yth element of the array)

  -- Passing Result: The IUT shall respond as indicated conveying the value of the 
  -- Yth element as specified in the EPICS.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading a Single Element of an Array

    SEND (
     
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array
      Unsigned = 2, INDEX1		; Read (non-proprietary) element of the array
    )

    EXPECT (
     
      PDU = ComplexAck
      DER = FALSE
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array
      Unsigned = 2, INDEX1
      OpenTag 3
 --       AL = {Priority-Array[INDEX1]}	; Test using referenced index fails in VTS
          AL = {Priority-Array[1]}	        ;  V2.28 but the hardcoded index passes
      CloseTag 3
    )

  ;------------------------------------------------------------------------------------- 
  TEST #1h - Read Property of Type Bitstring

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Bitstring.

  -- Test Steps:
  --	1. VERIFY (Object, X), property value = (any valid bitstring)

  -- Passing Result: The IUT shall respond as indicated conveying the value of
  -- the bitstring as specified in the EPICS.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) Reading Bitstring Values
 
    SEND (
     
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, binary-output, 2
      Property = 1, Status-Flags		; Read type BITSTRING
    )

    EXPECT (
      
      PDU = ComplexAck
      Service = ReadProperty
      Object = 0, binary-output, 2
      Property = 1, Status-Flags
      OpenTag 3
        AL = {Status-Flags}
      CloseTag 3
    )

  ;-------------------------------------------------------------------------------------
  Test #1i - Read Property of Entire List

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type List and the value read is an
  -- entire list. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (an entire list)
  
  -- Passing Result: The IUT shall respond as indicated conveying the values in the
  -- list as specified in the EPICS.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) TBD

  SEND (
   
    PDU = Confirmed-Request
    Service = ReadProperty
    Object = 0, OBJECT1
    Property = 1, Device-Address-Binding	; Required property of type List
  )

  EXPECT (
    
    PDU = ComplexAck
    Service = ReadProperty
    Object = 0, OBJECT1
    Property = 1, Device-Address-Binding
    OpenTag 3
       AL = {Device-Address-Binding}
    CloseTag 3                                   
  )

 ;-------------------------------------------------------------------------------------
  Test #1j - Read Property - Read Null Values

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property value is NULL. 

  -- Test Step:
  --	1. VERIFY (Object, X, optional Array Index = Y), property value = (Null)
 
  -- Passing Result: The IUT shall respond with a Null value.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) TBD

   SEND (
    
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array
      Unsigned = 2, INDEX2		; Read Priority-Array[INDEX2]
    )

    EXPECT (
     
      PDU = ComplexAck
      Service = ReadProperty
      Object = 0, PRIARRAYOBJ
      Property = 1, Priority-Array
      Unsigned = 2, INDEX2
      OpenTag 3
         AL = X'00'			;   so hardcode the test for NULL
      CloseTag 3
    )

 ;-------------------------------------------------------------------------------------
 Test #1k - Read Property of Type Boolean

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Boolean. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (one of either TRUE or FALSE)
 
  -- Passing Result: The IUT shall respond with the value of either TRUE or FALSE.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) TBD

  SEND (
    
    PDU = Confirmed-Request
    Service = ReadProperty
    Object = 0, binary-value, 1
    Property = 1, OUT-OF-SERVICE	; Optional property of type Boolean
  )

  EXPECT (
    
    PDU = ComplexAck
    Service = ReadProperty
    Object = 0, binary-value, 1
    Property = 1, OUT-OF-SERVICE
    OpenTag 3
       AL = {OUT-OF-SERVICE}
    CloseTag 3                                   
  )

 ;-------------------------------------------------------------------------------------
 ; Note Test #1l is pending since VTS doesn't currently support UTC-Offset property
 ;-------------------------------------------------------------------------------------
  Test #1l - Read Property of Type Signed

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Signed. 

  -- Test Step:
  --	1. 1. VERIFY (Object, X), property value = (any valid Signed value)

  -- Passing Result: The IUT shall respond with a valid Signed value.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) TBD

    SEND (
      
      PDU = Confirmed-Request
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, UTC-Offset		; UTC_Offset is of type Signed
    )

    EXPECT (
      
      PDU = ComplexAck
      Service = ReadProperty
      Object = 0, OBJECT1
      Property = 1, UTC_Offset	
      OpenTag 3
        AL = {UTC-Offset}
      CloseTag 3                                   
    )

  ;-------------------------------------------------------------------------------------
  Test #1m - Read Property of Type Real

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Real. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (any valid Real value)
 
  -- Passing Result: The IUT shall respond with any valid value of type Real.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) TBD

  SEND (
   
    PDU = Confirmed-Request
    Service = ReadProperty
    Object = 0, OBJECT2
    Property = 1, Present-Value		; Required property of type Real
  )

  EXPECT (
    
    PDU = ComplexAck
    Service = ReadProperty
    Object = 0, OBJECT2
    Property = 1, Present-Value
    OpenTag 3
       AL = {Present-Value}                                
    CloseTag 3                                   
  )

  ;-------------------------------------------------------------------------------------
  ; Note: this test is pending since there is currently no property with type Double
  ;-------------------------------------------------------------------------------------
--  Test #1n - Read Property of Type Double

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Double. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (any valid Double value)
 
  -- Passing Result: The IUT shall respond with any valid value of type Double.

--  DEPENDENCIES None

--  REFERENCE (B) ReadProperty Service and (T) TBD

--  SEND (
--    NETWORK = NET_1
--    DA = Broadcast
--    DNET = DNET_MSTP
--    DADR = IUT_MAC
--    DER = TRUE
--    PDU = Confirmed-Request
--    Service = ReadProperty
--    Object = 0, OBJECTX
--    Property = 1, property			; Required property of type Double - TBD
--  )

--  EXPECT (
--    NETWORK = NET_1
--    DER = FALSE
--    PDU = ComplexAck
--    Service = ReadProperty
--    Object = 0, OBJECTX
--    Property = 1, property
--    OpenTag 3
--       AL = {property}
--    CloseTag 3                                   
--  )

  ;-------------------------------------------------------------------------------------
  Test #10 - Read Property of Type Time ; 

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Time. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (any valid Time value)
 
  -- Passing Result: The IUT shall respond with any valid value of type Time.

 DEPENDENCIES None

 REFERENCE (B) ReadProperty Service and (T) TBD

 SEND (
   
   PDU = Confirmed-Request
    Service = ReadProperty
    Object = 0, OBJECT1
    Property = 1, Local-Time		; Required property of type Time
 )

 EXPECT (
    NETWORK = NET_1
    DER = FALSE
    PDU = ComplexAck
    Service = ReadProperty
    Object = 0, OBJECT1
    Property = 1, Local-Time
    OpenTag 3
	AL = {Local-Time}		
    CloseTag 3			                               
  )

  ;-------------------------------------------------------------------------------------
  Test #1p - Read Property of Type Date

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Date. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (any valid Date value)
 
  -- Passing Result: The IUT shall respond with any valid value of type Date.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) TBD

  SEND (
    
    PDU = Confirmed-Request
    Service = ReadProperty
    Object = 0, OBJECT1
    Property = 1, Local-Date		; Required property of type Date
  )

  EXPECT (
   
    PDU = ComplexAck
    Service = ReadProperty
    Object = 0, OBJECT1
    Property = 1, Local-Date
    OpenTag 3
	AL = {Local-Date}		
   CloseTag 3			
  )

  ;-------------------------------------------------------------------------------------
  Test #1q - Read Property of Type Octet String

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Octet String. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (any valid Octet String value)
 
  -- Passing Result: The IUT shall respond with any valid value of type Octet String.

  -- Configuration Note: The File object was initialized with the octet string 
  --  "0, 1, 2, 3, 4, 5" and the substring "0, 1, 2, 3" was used for verification.
  --  Change the "AL =" script statement to conform to your test string.

  DEPENDENCIES None

  REFERENCE (B) ReadProperty Service and (T) TBD

    SEND (
    
      PDU = Confirmed-Request
      Service = AtomicReadFile
 --     Object = 0, OBJECT4			; VTS parser error so hardcode
      AL = X'C402800001'			;  the file object reference
      Open Tag 0
        INTEGER = FILESTART			; specify file start position
        UNSIGNED = OCTETCOUNT			; specify octet string count
      Close Tag 0
    )
 
    EXPECT (
     
      PDU = ComplexAck
      Service = AtomicReadFile
      BOOLEAN = FALSE				; specify if test reaches EOF
      Open Tag 0
        INTEGER = FILESTART			; specify file start position
        OCTETSTRING = X'302C20312C20322C20'	; test returned Octet String
      Close Tag 0
    )

  ;-------------------------------------------------------------------------------------
  ; This test is currently not supported
  ;-------------------------------------------------------------------------------------
--  Test #1r - Read Proprietary Values

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Proprietary. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (any valid Proprietary value)
 
  -- Passing Result: The IUT shall respond with any valid value of type Proprietary.

--  DEPENDENCIES None

--  REFERENCE (B) ReadProperty Service and (T) TBD

--    SEND (
--      NETWORK = NET_1
--      DA = Broadcast
--      DNET = DNET_MSTP
--      DADR = IUT_MAC
--      DER = TRUE
--      PDU = Confirmed-Request
--      Service = ReadProperty
--      Object = 0, OBJECTX
--      Property = 1, property
--    )

--    EXPECT (
--      NETWORK = NET_1
--      DER = FALSE
--      PDU = ComplexAck
--      Service = ReadProperty
--      Object = 0, OBJECTX
--      Property = 1, property
--      OpenTag 3
--  	 AL = {property}
--      CloseTag 3
--    )

  ;-------------------------------------------------------------------------------------
  ; This test requires instructions from the IUT manufacturer to complete
  ;-------------------------------------------------------------------------------------
--  Test #1s - Read Constructed Values

  -- Purpose: This test case verifies that the IUT can execute ReadProperty service
  -- requests when the requested property is of type Constructed. 

  -- Test Step:
  --	1. VERIFY (Object, X), property value = (any valid Constructed value)
 
  -- Passing Result: The IUT shall respond with any valid value of type Constructed.

--  DEPENDENCIES None

--  REFERENCE (B) ReadProperty Service and (T) TBD

--    SEND (
--      NETWORK = NET_1
--      DA = Broadcast
--      DNET = DNET_MSTP
--      DADR = IUT_MAC
--      DER = TRUE
--      PDU = Confirmed-Request
--      Service = ReadProperty
--      Object = 0, OBJECTX
--      Property = 1, property
--    )

--    EXPECT (
--      NETWORK = NET_1
--      DER = FALSE
--      PDU = ComplexAck
--      Service = ReadProperty
--      Object = 0, OBJECTX
--      Property = 1, property
--      OpenTag 3
--  	 AL = {property}
--      CloseTag 3
--    )

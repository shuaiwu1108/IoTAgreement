  ;-------------------------------------------------------------------------------------
  ;  DeviceCommunicationControl Service Execution Tests
  ;  "DRAFT COPY--- DO NOT DISTRIBUTE"
  ;  DCC yymmdd.vts
  ;
  ;  Ver 1.0   10/09/01           BradSp	Initial version
  ;   
  ;  Purpose:  This test case verifies the correct execution of the DeviceCommunicationControl request service procedure when a finite     time duration is specified and communication is restored using the DeviceCommunicationControl service.
  ;  
  ;  In the REFERENCE section "(B)" refers to the BACnet standard and
  ;  "(T)" refers to the testing addendum.
  ;-------------------------------------------------------------------------------------
  
  SETUP DeviceCommunicationControl Service Execution Tests

  ;------------------------------------------------------------------------------------- 
  ; Notes on Hardcoding and other changes needing to be made outside of the setup section including hard coded objects and properties 
  ; Items marked and found with *** are hardcoded or the error messages must be manually verified in the trace. 
  ; Items Marked with MANUAL must be manually verified or sent.
  ;
  ;-------------------------------------------------------------------------------------
  ;
  ; TD_CONFIG   All objects and properties are listed here including notes on there use
  ;


  TD_IP = 10.10.10.2
	
  ;-------------------------------------------------------------------------------------
  ;
  ;  Routing_Config
  ;  

  -- DNET_MSTP = 20001, MS/TP     ; Sets the DNET of the remote MSTP network (Comment if no routing) ***

  ;-----IUT and TD are on the same Ethernet segment
  ;   DA = IUT_IP 
  ;-----IUT is on an MSTP segment and TD is on an Ethernet segment
  ;   DA = Broadcast
  ;   DNET = DNET_MSTP
  ;   DADR = IUT_IP
  ;---------------------------------------- 
  ;-------------------------------------------------------------------------------------
  ;
  ; IUT_CONFIG
  ;
  
   IUT_IP = 208.6.162.35		; Address of IUT

  -- Global variables
     PASSW = ANSI,"123"       ; Password, replace with vendor's re-init AND DEV-COMM password
     OBJECT1 = Device, 245146 	   ; DEVICE OBJ

     WARMSTART = 1	  

 -- TEST #1 Finite Time Duration Restored by DeviceCommunicationControl
                      -- MANUAL SEND AND RECEIVE 
                                --  Step #6 Manually Verify VTS Trace CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)
		      -- BODY CHANGE  (NONE)
                                    

 -- TEST #2(a) Finite Time Duration Restored by ReinitializeDevice
                      -- MANUAL SEND AND RECEIVE Yes
                                -- Step #4: Manually Verify VTS Trace ReadProperty-Request (There should be no response to this read)
                                -- Step #6  Manually Verify VTS Trace CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)
                                -- STEP #9: Manually Verify physical device CHECK (Make sure that the IUT performs a COLDSTART reboot?) 
		      -- BODY CHANGE  (NONE)
                                                               

                      -- TEST #2(B) CAUTION - WAIT FOR THE DEVICE TO RENINITIALIZE  - TEST #2(a) Finite Time Duration Restored by ReinitializeDevice
                      -- Run this test before completing Test #2

 -- TEST #3 (A) 9.21.1.1 Indefinite Time Duration Restored by DeviceCommunicationControl 
                      -- MANUAL SEND AND RECEIVE 
                                -- Manually Verify VTS Trace Step #6 CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2. - See VTS trace)
                      -- BODY CHANGE  (NONE)
                      -- TEST #3 (B) 9.21.1.1 Indefinite Time Duration Restored by DeviceCommunicationControl 

 -- TEST #4 (A) 9.21.1.2	Indefinite Time Duration Restored by ReinitializeDevice
                      -- MANUAL SEND AND RECEIVE     
                      -- BODY CHANGE  (NONE)

                      -- TEST #4 (B) 9.21.1.2	Indefinite Time Duration Restored by ReinitializeDevice
                      --  Manually Verify VTS Trace Step #6	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2. - See VTS trace)
                      --  MANUALLY CHECK the physical device Step #9 (Did the IUT perform a COLDSTART reboot?)
                     
 -- TEST #5 9.21.1.3	Finite Time Duration
                      -- Manually wait for the device to reenable before starting 5 (B)
                      -- Make sure that the device does not send while disabled
                      -- BODY CHANGE  (NONE)

 -- TEST #6 9.21.2.1	Invalid Password
                      -- MANUAL SEND AND RECEIVE (None)
                      -- BODY CHANGE  (NONE)

 -- TEST #7 9.21.2.2    Missing Password
                      -- MANUAL SEND AND RECEIVE (None)
                      -- BODY CHANGE  (NONE)

  ;-------------------------------------------------------------------------------------
 
   SECTION ReinitializeDevice Service Execution Tests

  -- Configuration Requirements: IUT is on the same network as the TD.





;-------------------------------------------------------------------------------------
  TEST #1 Finite Time Duration Restored by DeviceCommunicationControl
  -- Test Steps:

  --	TRANSMIT DeviceCommunicationControl-Request,
  --        ‘Time Duration’ = (a value T > 1, in minutes, selected by the tester).
  --         ‘Enable/Disable’ = DISABLE,
  --         ‘Password’ = (any appropriate password as described in the Test Concept)
  --	RECEIVE BACnet-SimpleACK-PDU
  --	WAIT Internal Processing Fail Time
  -- 	TRANSMIT ReadProperty-Request,
  --         ‘Object Identifier’ = (Device, X),
  --         ‘Property Identifier’ = (any required non-array property of the Device object)
  --	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester, and < T as specified in the            
  --    DeviceCommunicationControl-Request)
  --	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)
  --	TRANSMIT DeviceCommunicationControl-Request,
  --         ‘Enable/Disable’ = ENABLE,
  --         ‘Password’ = (any appropriate password as described in the Configuration Requirements)
  --	RECEIVE BACnet-Simple-ACK-PDU
  --	VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the Configuration             
  --    Requirements)


  DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests

  -- Step #1: DeviceCommunicationControl service request

  SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    -- 	Object = 0, OBJECT1
    	UNSIGNED = 0, 1                        ; Time-Duration (is set out of service for 1 minute)
	ENUMERATED = 1, 1                        ; ENABLE(0)/DIASABLE(1) (Device is disabled)
    	CHARACTERSTRING = 2, PASSW          ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

  -- Step #2: Receive Simple ACK

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = DeviceCommunicationControl 
    )


 --  Step #3 WAIT Internal Processing Fail Time (This can be run without a time check since the downtime is set to one minute)


 -- Step #4: TRANSMIT ReadProperty-Request (There should be no response to this read)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

 --  Step #5	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester, and < T as specified in the  
 --             DeviceCommunicationControl-Request) (Find how to do this)

   
 -- Step #6	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)

 
 -- Step #7 	TRANSMIT DeviceCommunicationControl-Request, Device is placed back into operation

  SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    	UNSIGNED = 0, 0                        ; Time-Duration (Is set back in service)
    	ENUMERATED = 1, 0                        ; ENABLE(0)/DIASABLE(1) (Device is Enabled)
    	CHARACTERSTRING = 2, PASSW                   ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = DeviceCommunicationControl
    )

 --  Step #9 	VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the Configuration     
 --             Requirements)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      	NETWORK = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
      	DER = FALSE
      	PDU = ComplexAck
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier
      	OpenTag 3
         	AL = {Object-Identifier}
      	CloseTag 3
    )

 -- ----------------------------------------------------------------------------------------------------
 -- ----------------------------------------------------------------------------------------------------
 
  TEST #2(a) (CAUTION BEGIN TEST 2#(B) BEFORE PASSING THIS TEST) Finite Time Duration Restored by ReinitializeDevice
 -- Purpose:  This test case verifies the correct execution of the DeviceCommunicationControl request service procedure when a finite   
 --           time duration is specified and communication is restored using the ReinitializeDevice service.

 --      Test Steps:

 --      1.	TRANSMIT DeviceCommunicationControl-Request,
 --               ‘Time Duration’ = (a value T > 1, in minutes, selected by the tester).
 --               ‘Enable/Disable’ = DISABLE,
 --               ‘Password’ = (any appropriate password as described in the Test Concept)
 --      2.	RECEIVE BACnet-SimpleACK-PDU
 --      3.	WAIT Internal Processing Fail Time
 --      4.	TRANSMIT ReadProperty-Request,
 --               ‘Object Identifier’ = (Device, X),
 --               ‘Property Identifier’ = (any required non-array property of the Device object)
 --      5.	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester, and < T as specified in the             
 --               DeviceCommunicationControl-Request)
 --      6.	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)
 --      7.	TRANSMIT ReinitializeDevice-Request,
 --                Reinitialize State of Device’ = WARMSTART,
 --                ‘Password’ = (any appropriate password as described in the Test Concept)
 --      8.	RECEIVE BACnet-Simple-ACK-PDU
 --      9.	CHECK (Did the IUT perform a COLDSTART reboot?)
 --      10.	VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the EPICS)

 DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests

  -- Step #1: DeviceCommunicationControl service request

  SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    -- 	Object = 0, OBJECT1
    	UNSIGNED = 0, 1                        ; Time-Duration (is set out of service for 1 minute)
    	ENUMERATED = 1, 1                        ; ENABLE(0)/DIASABLE(1) (Device is Disabled)
    -- 	CHARACTERSTRING = 2, "PASSWORD"          ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

  -- Step #2: Receive Simple ACK

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = DeviceCommunicationControl 
    )
 
 --  Step #3 WAIT Internal Processing Fail Time (This can be run without a time check since the downtime is set to one minute)


 -- Step #4: TRANSMIT ReadProperty-Request (There should be no response to this read)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier		; Type BACnetObjectIdentifier
    )

 --  Step #5	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester, and < T as specified in the  
 --             DeviceCommunicationControl-Request) (Find how to do this)

   
 -- Step #6	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)

 -- Step #7	TRANSMIT ReinitializeDevice-Request

  SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = ReinitializeDevice
    	ENUM = 0, WARMSTART			; Request a WARMSTART W/ NO PASSWORD
    	CHARACTERSTRING = 1, PASSW
    )

 -- Step #8: Receive Simple ACK

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = ReinitializeDevice
    )

 -- STEP #9 CHECK (Did the IUT perform a COLDSTART reboot?) MANUAL

  

 TEST #2(B) CAUTION - WAIT FOR THE DEVICE TO RENINITIALIZE  - TEST #2(a) Finite Time Duration Restored by ReinitializeDevice
 
  -- STEP #10 VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the EPICS)


  DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests

   SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      	NETWORK = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
      	DER = FALSE
      	PDU = ComplexAck
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier
      	OpenTag 3
         	AL = {Object-Identifier}
      	CloseTag 3
    )

 -- ----------------------------------------------------------------------------------------------------
 -- ----------------------------------------------------------------------------------------------------




;-------------------------------------------------------------------------------------
  TEST #3 (A) 9.21.1.1 Indefinite Time Duration Restored by DeviceCommunicationControl

 --     Purpose: This test case verifies the correct execution of the DeviceCommunicationControl request service procedure when       
 --     indefinite time duration is specified and communication is restored using the DeviceCommunicationControl service.

 --      Test Steps:

 --      1.	TRANSMIT DeviceCommunicationControl-Request,
 --		'Enable/Disable' =	DISABLE,
 --		'Password' =	(any appropriate password as described in the Test Concept)
 --      2.	RECEIVE BACnet-Simple-ACK-PDU
 --      3. 	WAIT Internal Processing Fail Time
 --      4.	TRANSMIT ReadProperty-Request,
 --     	'Object Identifier' =	(Device, X),
 --		'Property Identifier' =	(any required non-array property of the Device object)
 --      5.	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester)
 --      6.	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)
 --      7.	TRANSMIT DeviceCommunicationControl-Request,
 --		'Enable/Disable' =	ENABLE,
 --		'Password' =	(any appropriate password as described in the Configuration Requirements)
 --      8.	RECEIVE BACnet-Simple-ACK-PDU
 --      9.	VERIFY (Device, X), 
 --		(any required non-array property) = (the value for this property specified in the EPICS)



  DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests

  -- Step #1: DeviceCommunicationControl service request

 SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    	ENUMERATED = 1, 1                        ; ENABLE(0)/DIASABLE(1) (Device is disabled)
    	CHARACTERSTRING = 2, PASSW 	        ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

  -- Step #2: Receive Simple ACK

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = DeviceCommunicationControl 
    )

 --  Step #3 WAIT Internal Processing Fail Time (This can be run without a time check since the downtime is set to one minute)


 -- Step #4: TRANSMIT ReadProperty-Request (There should be no response to this read)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

 --  Step #5	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester, and < T as specified in the  
 --             DeviceCommunicationControl-Request) 

    TEST #3 (B) 9.21.1.1 Indefinite Time Duration Restored by DeviceCommunicationControl

 -- Step #6	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2. - See VTS trace)

 
 -- Step #7 	TRANSMIT DeviceCommunicationControl-Request, Device is placed back into operation

  SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    	ENUMERATED = 1, 0                        ; ENABLE(0)/DIASABLE(1) (Device is Enabled)
    	CHARACTERSTRING = 2, PASSW                   ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = DeviceCommunicationControl
    )

 --  Step #9 	VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the Configuration     
 --             Requirements)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      	NETWORK = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
      	DER = FALSE
      	PDU = ComplexAck
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier
      	OpenTag 3
         	AL = {Object-Identifier}
      	CloseTag 3
    )

 -- ----------------------------------------------------------------------------------------------------
 -- ----------------------------------------------------------------------------------------------------
 


TEST #4 (A) 9.21.1.2	Indefinite Time Duration Restored by ReinitializeDevice

 --     Purpose: This test case verifies the correct execution of the DeviceCommunicationControl request service procedure when indefinite  --     time duration is specified and communication is restored using the ReinitializeDevice service.

 --      Test Steps:

 --     1.	TRANSMIT DeviceCommunicationControl-Request,
 --		'Enable/Disable' =	DISABLE,
 --		'Password' =	(any appropriate password as described in the Test Concept)
 --     2.	RECEIVE BACnet-Simple-ACK-PDU
 --     3. 	WAIT Internal Processing Fail Time
 --     4.	TRANSMIT ReadProperty-Request,
 --  		'Object Identifier' =	(Device, X),
 --		'Property Identifier' =	(any required non-array property of the Device object)
 --     5.	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester)
 --     6.	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2.)
 --     7.	TRANSMIT ReinitializeDevice-Request,
 -- 		Reinitialized State of Device' =	WARMSTART,
 --		'Password' =			(any appropriate password as described in the Test Concept)
 --     8.	RECEIVE BACnet-Simple-ACK-PDU
 --     9.	CHECK (Did the IUT perform a COLDSTART reboot?)
 --     10.	VERIFY (Device, X), 
 --		(any required non-array property) = (the value for this property specified in the EPICS)


  DEPENDENCIES ReinitializeDevice Service Execution Tests, 9.24

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests

  -- Step #1: TRANSMIT DeviceCommunicationControl-Request,

 SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    	ENUMERATED = 1, 1                        ; ENABLE(0)/DIASABLE(1) (Device is disabled)
    	CHARACTERSTRING = 2, PASSW          ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

 -- Step #2: Receive Simple ACK

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = DeviceCommunicationControl 
    )


 --  Step #3 WAIT Internal Processing Fail Time (This can be run without a time check since the downtime is set to one minute)


 --  Step #4: TRANSMIT ReadProperty-Request (There should be no response to this read)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

 TEST #4 (B) 9.21.1.2	Indefinite Time Duration Restored by ReinitializeDevice

 --  Step #5	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester, and < T as specified in the  
 --             DeviceCommunicationControl-Request) (Find how to do this)

   
 --  Step #6	CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2. - See VTS trace)

 
 --  Step #7	TRANSMIT ReinitializeDevice-Request

  SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = ReinitializeDevice
    	ENUM = 0, WARMSTART			; Request a WARMSTART W/ NO PASSWORD
    	CHARACTERSTRING = 1, PASSW
    )

 -- Step #8: Receive Simple ACK

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = ReinitializeDevice
    )

 --  Step #9 	MANUAL CHECK (Did the IUT perform a COLDSTART reboot?)


 --  Step #9 VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the Configuration  
 --  Requirements)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      	NETWORK = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
      	DER = FALSE
      	PDU = ComplexAck
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier
      	OpenTag 3
         	AL = {Object-Identifier}
      	CloseTag 3
    )

 -- ----------------------------------------------------------------------------------------------------
 -- ----------------------------------------------------------------------------------------------------
 

TEST #5 9.21.1.3	Finite Time Duration

 --     Purpose: This test case verifies the correct execution of the DeviceCommunicationControl request service procedure when finite time   --     duration is specified. 

 --      Test Steps:

 --     1.	TRANSMIT DeviceCommunicationControl-Request,
 --		'Time Duration' =	(a value T > 1, in minutes, selected by the tester).
 --		'Enable/Disable' =	DISABLE,
 --		'Password' =	(any appropriate password as described in the Test Concept)
 --     2.	RECEIVE BACnet-Simple-ACK-PDU
 --     3. 	WAIT Internal Processing Fail Time
 --     4.	TRANSMIT ReadProperty-Request,
 --		'Object Identifier' =	(Device, X),
 --		'Property Identifier' =	(any required non-array property of the Device object)
 --     5.	WAIT T 
 --     6.	CHECK (Verify that the IUT did not transmitted any messages between the acknowledgment in step 2
 --		and expiration of timer T.)
 --     7.	VERIFY (Device, X), 
 --		(any required non-array property) = (the value for this property specified in the EPICS)



  DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests

  -- Step #1: TRANSMIT DeviceCommunicationControl-Request,

 SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    	UNSIGNED = 0, 1                        ; Time-Duration (is set out of service for 1 minute)
    	ENUMERATED = 1, 1                        ; ENABLE(0)/DIASABLE(1) (Device is disabled)
    	CHARACTERSTRING = 2, PASSW          ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

 -- Step #2: Receive Simple ACK

  EXPECT (
    	Network = "Untitled"
    	DA = TD_IP
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
    	DER = FALSE
    	PDU = SimpleAck
    	Service = DeviceCommunicationControl 
    )


 --  Step #3 WAIT Internal Processing Fail Time (This can be run without a time check since the downtime is set to one minute)


 --  Step #4: TRANSMIT ReadProperty-Request (There should be no response to this read)

    SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier		; Type BACnetObjectIdentifier
    )

 --  Step #5	WAIT (an arbitrary time > Internal Processing Fail Time selected by the tester, and < T as specified in the  
 --             DeviceCommunicationControl-Request) 

   
 --  Step #6	MANUAL CHECK (Verify that the IUT has not transmitted any messages since the acknowledgment in step 2. - See VTS trace)

 TEST #5(B)9.21.1.3 CAUTION - WAIT ONE MINUTE FOR THE DEVICE TO REENABLE  - TEST #2(a) Finite Time Duration
 
  -- STEP #7 VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the EPICS)


  DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests

   SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      	NETWORK = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
      	DER = FALSE
      	PDU = ComplexAck
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier
      	OpenTag 3
         	AL = {Object-Identifier}
      	CloseTag 3
    )

 -- ----------------------------------------------------------------------------------------------------
 -- ----------------------------------------------------------------------------------------------------




TEST #6 9.21.2.1	Invalid Password

 --     Purpose: This test case verifies the correct execution of DeviceCommunicationControl service procedure when an invalid password is     --     provided. If the IUT does not provide password protection this test case shall be omitted.

 --     Test Steps:
 
 --     1.	TRANSMIT DeviceCommunicationControl-Request,
 --		'Enable/Disable' =	DISABLE,
 --		'Password' =	(any invalid password)
 --     2.	RECEIVE BACnet-Error-PDU,
 --		Error Class =	SECURITY,
 --		Error Code =	PASSWORD_FAILURE
 --     3.	VERIFY (Device, X), 
 --		(any required non-array property) = (the value for this property specified in the EPICS)

  DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests


 -- Step #1: TRANSMIT DeviceCommunicationControl-Request,

 SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    	UNSIGNED = 0, 1                        ; Time-Duration (is set out of service for 1 minute)
	ENUMERATED = 1, 1                        ; ENABLE(0)/DIASABLE(1) (Device is disabled)
    	CHARACTERSTRING = 2, PASSW               ; PASSWORD (Device should ignore if it does not support passwords)			 
    )

 -- Step #2: RECEIVE BACnet-Error-PDU,

 EXPECT  (
  	NETWORK     = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
  	DER         = FALSE
  	PDU         = ERROR
  	ERROR-CHoice = ReadProperty
  	ENUMERATED = 4                       ;  4  = error class SECURITY  pg 363 in the bacnet standard
  	ENUMERATED = 26	               ;  26 = PASSWORD_FAILURE 
)
 -- Step #3 VERIFY (Device, X), 

 SEND (
     	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      	NETWORK = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
      	DER = FALSE
      	PDU = ComplexAck
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier
      	OpenTag 3
         	AL = {Object-Identifier}
      	CloseTag 3
    )

 -- ----------------------------------------------------------------------------------------------------
 -- ----------------------------------------------------------------------------------------------------



TEST #7 9.21.2.2  Missing Password

 --     Purpose: This test case verifies the correct execution of DeviceCommunicationControl service procedure when a password is required  --     but not provided. If the IUT does not provide password protection this test case shall be omitted.

 --     Test Steps:

 --     1.	TRANSMIT DeviceCommunicationControl-Request,
 --		'Enable/Disable' =	DISABLE,
 --     2.	(RECEIVE BACnet-Error-PDU,
 --		Error Class =	SECURITY,
 --		Error Code =	PASSWORD_FAILURE)
 --	        (RECEIVE BACnet-Error-PDU,
 --		Error Class =	SERVICES,
 --		Error Code =	MISSING_REQUIRED_PARAMETER)
 --     3.	VERIFY (Device, X), 
 --		(any required non-array property) = (the value for this property specified in the EPICS)


  DEPENDENCIES None

  REFERENCE (B) DeviceCommunicationControl and (T) DeviceCommunicationControl Service Execution Tests


-- Step #1: TRANSMIT DeviceCommunicationControl-Request,

 SEND (
    	NETWORK = "Untitled"
    	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
    	Service = DeviceCommunicationControl
    	ENUMERATED = 1, 1                        ; ENABLE(0)/DIASABLE(1) (Device is disabled)
    		 
    )

 -- Step #2: RECEIVE BACnet-Error-PDU

 EXPECT (
  	NETWORK     = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
  	DER         = FALSE
  	PDU         = ERROR
  	ERROR-CHoice = ReadProperty
  	ENUMERATED = 4                       ;  4  = error class SECURITY  pg 363 in the bacnet standard
  	ENUMERATED = 26	               ;  26 = PASSWORD_FAILURE 
 )

  OR (
  NETWORK     = "Untitled"
  DER         = FALSE
  PDU         = ERROR
  ERROR-CHoice = ReadProperty
  ENUMERATED = 5                       ;  5 = error class services  pg 363 in the bacnet standard
  ENUMERATED = 16	               ;  16 = error code MISSING-REQUIRED-Parameters 
 )  


 --  Step #3 VERIFY (Device,X), (any required non-array property)=(the value for this property as described in the Configuration  --   --          Requirements)

  SEND (
      	NETWORK = "Untitled"
      	DA = IUT_IP
        bvlci =ORIGINAL-UNICAST-NPDU
      	DER = TRUE
      	PDU = Confirmed-Request
	SegMsg = 0
      	SegResp = 0
      	MaxResp = 1476
	InVokeID = 3
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier	; Type BACnetObjectIdentifier
    )

    EXPECT (
      	NETWORK = "Untitled"
    	bvlci =ORIGINAL-UNICAST-NPDU
	SA = IUT_IP
      	DER = FALSE
      	PDU = ComplexAck
      	Service = ReadProperty
      	Object = 0, OBJECT1
      	Property = 1, Object-Identifier
      	OpenTag 3
         	AL = {Object-Identifier}
      	CloseTag 3
    )
  ;-------------------------------------------------------------------------------------
  ;  Positive SubscribeCOV Service Execution Tests
  ; Canceling COV Subscriptions Test Case
  ;
  ; CancelConfirmedCOV.vts      CanCoCOVddmmyy.vts
  ;
  ;  Ver 1.0   06/02/01    P. Bowen Initial version
  ;
  ;  Purpose: This test case verifies that the IUT correctly responds to a
  ; SubscribeCOV request to cancel a COV subscription. This test cancels
  ; the subscription made in the "Confirmed COV Notifications" test case.
  ;
  ; Dependencies: Confirmed COV Notifications Test Case
  ;
  ;  In the REFERENCE section "(B)" refers to the BACnet standard and
  ;  "(T)" refers to the testing addendum.
  ;-------------------------------------------------------------------------------------

  SETUP Canceling COV Subscriptions Test Case
  INCLUDE "..\config.vts"

  ;--------------------------------------------------------------
  ;
  ; TD_CONFIG
  ;
  OBJECT1 = Analog-Value, 1 ; Object which is the subject of this test case

  PID = 10          ; Same PID as in Confirmed COV Notifications Test Case
  WRITE_PRIORITY = 1        ; Priority for writing changes

  ;-------------------------------------------------------------------------------------

   SECTION Canceling COV Subscriptions Test Case

  -- This test takes place across test #1a - #1b so the TD can be manually paused
  -- between tests. This is necessary since a time delay is needed in this test
  -- sequence and VTS currently doesn't give us a means for doing this within the
  -- script.

  -- Configuration Requirements:
  --    1) The IUT shall be configured with at least one object that supports
  --        subscriptions for COV notifications.
  --    2) IUT is on the same network as the TD.

  -- Test Steps:
  --
  -- 1. TRANSMIT SubscribeCOV-Request,
  --     'Subscriber Process Identifier' = (the process identifier used in
  --        Confirmed COV Notifications Test Case),
  --     'Monitored Object Identifier' = (the same object used in Confirmed COV
  --        Notifications Test Case)
  -- 2. RECEIVE BACnet-SimpleACK-PDU
  -- 3. WAIT Notification Fail Time
  -- 4. MAKE (a change to the monitored object that would cause a COV notification if there were an active subscription)

  -- Passing Result: The IUT shall not transmit a COV notification message.

  ;-------------------------------------------------------------------------------------
  TEST #1a Transmit UnsubscribeCOV Request and Receive SimpleACK

  DEPENDENCIES None

  REFERENCE (B) SubscribeCOV Service and (T) Positive SubscribeCOV Service Execution Tests

  -- Step #1 & 2: Send Unsubscribe COV Request to IUT and Receive Simple ACK

    SEND (
      DA = IUT_ADDR
      PDU = Confirmed-Request
      Service = SubscribeCOV        ; Cancel COV Subscription request
      Unsigned = 0, PID         ; Process-Identifier = PID
      Object = 1, OBJECT1       ; Object-Identifier = OBJECT1
    )

    EXPECT (
      SA = IUT_ADDR
      PDU = SimpleAck
      Service = SubscribeCOV
    )

  -- Step #3: Wait Notification Fail Time

  ;-------------------------------------------------------------------------------------
  TEST #1b Make a Change to the Object That Would Cause a COV Notification

  -- Step #4: Make Out-of-Service = TRUE and Verify (manually) that no
  -- COV Notification is issued

   SEND (
      DA = IUT_ADDR
      PDU = Confirmed-Request
      Service = WriteProperty
      Object = 0, OBJECT1
      Property = 1, Out-of-Service
      OpenTag 3
        BOOLEAN = TRUE          ; Put OBJECT1 out of service
      CloseTag 3
      Unsigned = 4, WRITE_PRIORITY  ; Set Out-of-Service write priority
    )

    EXPECT (
      SA = IUT_ADDR
      PDU = SimpleAck
      Service = WriteProperty
    )
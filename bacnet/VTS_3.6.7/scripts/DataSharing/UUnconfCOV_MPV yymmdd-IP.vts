  ;-------------------------------------------------------------------------------------
  ;  Unsubscribed, Unconfirmed COV Notification Service Initiation Tests
  ; COV Notification from a Multi-state Input, Multi-state Output, and
  ; Multi-state Value Object Present Value Property
  ;
  ;  UUnconfirmedCOV_MPV.vts    UUnCOVddmmyy-05.vts
  ;
  ;  Ver 0.1    05/27/01    P. Bowen    Initial untested version (no MI/MO/MV objects to test)
  ;
  ;  Purpose: This test case verifies that the IUT can initiate an Unsubscribed,
  ; UnconfirmedCOVNotification service requests conveying a change of the
  ; Present_Value property of Multi-state Input, Multi-state Output, and
  ; Multi-state Value objects.
  ;
  ;  Note - the following tests should be executed before running this test case:
  ; ReadProperty Service Execution Tests
  ; WriteProperty Service Execution Tests
  ;
  ;  In the REFERENCE section "(B)" refers to the BACnet standard and
  ;  "(T)" refers to the testing addendum.
  ;-------------------------------------------------------------------------------------

  SETUP Unsubscribed, Unconfirmed COV Notification Test - Multi-state Object Present Value Property
  INCLUDE "..\config.vts"

  PID = 10
  LIFETIME = 200
  OBJECT1 = Multistate-Value, 2 ; Object which is the subject of the COV tests

  WRITE_PRIORITY = 1        ; Priority for writing changes
  MSTATE_VALUE = 3      ; a new PV state which differs from the default


   SECTION Unsubscribed, Unconfirmed COV Notification Test - Multi-state Object Present Value Property

  -- This test takes place across test steps #1a - #1c so the TD can be manually
  -- paused between tests. This is necessary since the COV Notifications must be
  -- verified manually.

  -- Configuration Requirements: At the beginning of the test, the Out-Of-Service
  -- property shall have a value of FALSE.

  -- Test Concept: No subscription for COV notifications is established. The
  -- Present_Value of the monitored object is changed and a notification shall
  -- be received. The Present_Value may be changed using the WriteProperty service
  -- or by another means such as changing the input signal represented by a
  -- Multi-state Input object. For some implementations it may be necessary to
  -- write to the Out_Of_Service property first to accomplish this task. For
  -- implementations where it is not possible to write to these properties at all
  -- the vendor shall provide an alternative trigger mechanism to accomplish this
  -- task. All of these methods are equally acceptable.

  -- Test Steps:
  --    REPEAT X = (one supported object of each type from the set Multi-state
  --        Input, Multi-state Output, and Multi-state Value) DO {
  --    1. IF (Out_Of_Service is writable) THEN
  --        WRITE X, Out_Of_Service = TRUE
  --       RECEIVE BACnet-SimpleACK-PDU
  --    2. BEFORE Notification Fail Time
  --         RECEIVE UnconfirmedCOVNotification-Request,
  --            'Subscriber Process Identifier' = 0,
  --            'Initiating Device Identifier' = IUT,
  --            'Monitored Object Identifier' = X,
  --            'Time Remaining' = 0,
  --            'List of Values' = (the initial Present_Value and new Status_Flags)
  --    3. IF (Present_Value is now writable) THEN
  --        WRITE X, Present_Value = (any value that differs from "initial
  --        Present_Value")
  --        RECEIVE BACnet-SimpleACK-PDU
  --       ELSE
  --        MAKE (Present_Value = any value that differs from "initial
  --        Present_Value")
  --    4. BEFORE NotificationFailTime
  --        RECEIVE UnconfirmedCOVNotification-Request,
  --        'Subscriber Process Identifier' = 0,
  --        'Initiating Device Identifier' = IUT,
  --        'Monitored Object Identifier' = X,
  --        'Time Remaining' = 0,
  --        'List of Values' = (the new Present_Value and new Status_Flags)
  --    5. IF (Out_Of_Service is writable) THEN
  --        WRITE X, Out_Of_Service = FALSE
  --        RECEIVE BACnet-SimpleACK-PDU
  --    }

  ;-------------------------------------------------------------------------------------
  TEST #1a Make Out-of-Service = TRUE and Receive Unconfirmed COV Notification Request

  DEPENDENCIES None

  -- Step #1: Make Out-of-Service = TRUE and Receive Simple ACK
    SEND (
      Da = IUT_ADDR
      PDU = Confirmed-Request
      Service = SubscribeCOV
      Unsigned = 0, PID         ; Process-Identifier = PID
      Object = 1, OBJECT1       ; Object-Identifier = OBJECT1
      Boolean = 2, FALSE        ; Request Unconfirmed notifications
      Unsigned = 3, LIFETIME        ; Subscribe for LIFETIME seconds
    )

    EXPECT (
      Sa = IUT_ADDR
      PDU = SimpleAck
      Service = SubscribeCOV
    )

   SEND (
      Da = IUT_ADDR
      PDU = Confirmed-Request
      Service = WriteProperty
      Object = 0, OBJECT1
      Property = 1, Out-of-Service
      OpenTag 3
        BOOLEAN = TRUE          ; Make Out-of-Service = TRUE
      CloseTag 3
      Unsigned = 4, WRITE_PRIORITY  ; Set Out-of-Service write priority
    )

    EXPECT (
      Sa = IUT_ADDR
      PDU = SimpleAck
      Service = WriteProperty
    )

  -- Step #2: Before NotificationFailTime Receive Unconfirmed COV Notification Request

  --  AND (             ; Can't control the timing of the IUT's
  --    PDU = Confirmed-Request
  --    Service = UnconfirmedCOVNotification
  --  )

  ;-------------------------------------------------------------------------------------
  TEST #1b  Make PV = any value that differs from "Initial Present_Value"

  DEPENDENCIES None

  -- Step #3: PV = any value that differs from "Initial PV" and Receive Simple ACK

   SEND (
      Da = IUT_ADDR
      PDU = Confirmed-Request
      Service = WriteProperty
      Object = 0, OBJECT1
      Property = 1, Present-Value
      OpenTag 3
        Unsigned = MSTATE_VALUE     ; One of N states, N is defined in EPICS
      CloseTag 3
      Unsigned = 4, WRITE_PRIORITY  ; Set PV write priority
    )

    EXPECT (
      Sa = IUT_ADDR
      PDU = SimpleAck
      Service = WriteProperty
    )

  -- Step #4: Before NotificationFailTime Receive Unconfirmed COV Notification Request

  --  AND (             ; Can't control the timing of the SubscribeCOV
  --    PDU = Confirmed-Request
  --    Service = UnconfirmedCOVNotification
  --  )

 ;-------------------------------------------------------------------------------------
  TEST #1c Make Out-of-Service = FALSE

  DEPENDENCIES None

  -- Step #5: Return point to service (make Out-of-Service = FALSE)

   SEND (
      Da = IUT_ADDR
      PDU = Confirmed-Request
      Service = WriteProperty
      Object = 0, OBJECT1
      Property = 1, Out-of-Service
      OpenTag 3
         BOOLEAN = FALSE        ; Make Out-of-Service = FALSE
      CloseTag 3
      Unsigned = 4, WRITE_PRIORITY  ; Set Out-of-Service write priority
    )

    EXPECT (
      Sa = IUT_ADDR
      PDU = SimpleAck
      Service = WriteProperty
    )